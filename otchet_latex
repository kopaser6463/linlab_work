\documentclass[a4paper,12pt]{article}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}
\usepackage{geometry}
\usepackage{graphicx}
\geometry{top=2cm,bottom=2cm,left=3cm,right=1.5cm}

\begin{document}

\begin{center}
\textbf{Министерство науки и высшего образования Российской Федерации} \\
\vspace{0.2cm}
\textbf{ФЕДЕРАЛЬНОЕ ГОСУДАРСТВЕННОЕ АВТОНОМНОЕ} \\
\textbf{ОБРАЗОВАТЕЛЬНОЕ УЧРЕЖДЕНИЕ ВЫСШЕГО ОБРАЗОВАНИЯ} \\
\textbf{НАЦИОНАЛЬНЫЙ ИССЛЕДОВАТЕЛЬСКИЙ УНИВЕРСИТЕТ ИТМО} \\
\end{center}

\vspace{4cm}

\begin{center}
\textbf{\LARGE{Лабораторная работа №1 \\
по дисциплине \\``Линейная алгебра и анализ данных''}} \\
\vspace{1cm}
\textbf{\LARGE{Семестр I}}
\end{center}

\vspace{3cm}

\begin{flushright}
\begin{tabular}{rl}
Выполнил: & студент \\
& Лебедев Леонид Сергеевич \\
& гр. J3114 \\
& ИСУ 475148  \\
& 
Невмержицкий Даниил Андреевич \\
& гр. J3114 \\
& ИСУ 466847 \\
& Лесовой Никита Павлович \\
& гр. J3114 \\
& ИСУ 466502 \\
\\
Отчет сдан: & 99.99.9999 \\
\end{tabular}
\end{flushright}

\vspace{3cm}

\begin{center}
Санкт-Петербург \\
2024
\end{center}

\begin{flushleft}
    \textbf{Цели работы:} научиться работать с матрицами в языках программирования, реализовать способ взаимодействия с матрицами. \\
    \textbf{Задачи работы:}
    \begin{itemize}
        \item Реализовать хранение матриц в разреженно-строчном виде.
        \item Реализовать функции для взаимодействия с матрицами.item
        \item Написать отчёт по выполненной работе.
    \end{itemize}
    Для выполнения лабораторной работы был выбран язык программирования С++, так как у команды больше опыта использования именно этого языка.\\
    Задача 1:
    Хранение матрицы в разреженно-строчном виде реализовано в виде класса CSR_format.\\
    \begin{center}
        \includegraphics{to_csr}\\
    \end{center}
    Вывод элемента матрицы по номеру строки и столбца был реализован функцией, в которой используется перебор из одного цикла. После нахождения подходящей строчки и колонки по существующему индексу находится значение. \\
    \begin{center}
        \includegraphics{get_value.png}\\
    \end{center}
    Подсчёт следа реализован схожим способом. Цикл перебирает значения, находящиеся на главной диагонали, и суммирует их. 
    \begin{center}
        \includegraphics{trace.png}\\
    \end{center}
    Задача 2: Сложение матриц реализовано без перевода матрицы из CSR формата в стандартный. В цикле идёт проверка на совпадение позиции элементов. Если позиция совпала, то в первую матрицу добавляют сумму элементов. Иначе в первую матрицу добавляют значение из второй, или оставляют то значение, что там уже есть.
    \begin{center}
        \includegraphics[width=17cm]{summ.png}\\
    \end{center}
    Умножение матрицы на скаляр реализовано перебором значений матрицы и умножением их на константу. 
    \begin{center}
        \includegraphics{constmul.png}\\
    \end{center}
    Для умножения матрицы на матрицу, она возвращается в изначальный вид. 
    \begin{center}
        \includegraphics{csr _to_std.png}\\
    \end{center}
    Для умнржения матрицы на матрицу изначально проверяется возможность выполнить данную операцию. Если матрицы подходят по условию, то они попадают в три цикла.
    \begin{center}
        \includegraphics[width=17cm]{matmul.png}\\
    \end{center}
    Задача 3: Поиск определителя реализован алгоритмом, позволяющим посчитать определитель перемножением элементов главной диагонали.\\
    \begin{center}
        \includegraphics[width=17cm]{determinant.png}\\
    \end{center}
    После того, как нашли определитель, легко делаем вывод, имеет ли матрица обратную. Если определитель не равен нулю, то имеет. Также делаем проверку на то, квадратная ли матрица и можно ли у неё найти определитель.\\
    \\
    \textbf{Вывод: } в процессе работы научились работать с матрицами в языке программирования С++, реализовали некоторые функции матрицы, предоставляемые библиотекой numpy, наглядно увидели взаимодействие матриц друг с другом.
\end{flushleft}

\end{document}
